#pragma once

#include <algorithm>
#include  <array>
#include  <atomic>
#include <cmath>
#include <cstdint>
#include <cstring>
#include <fstream>
#include <iomanip> 
#include <string>
#include <sstream>
#include <vector>

using namespace std;

class Chip8
{
public:
	Chip8();
	~Chip8();
	void  Initialize();
	bool  LoadRom(const  char* filename);
	void EmulateCycle();
	void ExecuteOpcode(uint16_t opcode);

	void soundTimerCountDown();
	void delayTimerCountDown();
	unsigned char screen_pixels[64 * 32]; //
	bool drawFlag;
	bool   key[16];
private:
	unsigned short  opcode; // 35 opcodes 

	unsigned char delay_timer;
	unsigned char sound_timer;
	unsigned short sp; //stack pointer

	

	uint16_t I; //index register
	uint16_t pc; //program counter

	uint8_t V[16]; //16 cpu registers
	unsigned char memory[4096]; //4kb = 4096 bytes memory 

	

	unsigned short stack[16];



	uint8_t chip8_fontset[80] = {
  0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
  0x20, 0x60, 0x20, 0x20, 0x70, // 1
  0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
  0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
  0x90, 0x90, 0xF0, 0x10, 0x10, // 4
  0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
  0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
  0xF0, 0x10, 0x20, 0x40, 0x40, // 7
  0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
  0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
  0xF0, 0x90, 0xF0, 0x90, 0x90, // A
  0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
  0xF0, 0x80, 0x80, 0x80, 0xF0, // C
  0xE0, 0x90, 0x90, 0x90, 0xE0, // D
  0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
  0xF0, 0x80, 0xF0, 0x80, 0x80  // F
	};
};



